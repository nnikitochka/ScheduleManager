package ru.nnedition.schedule

import ru.nnedition.schedule.module.ScheduleModule
import java.util.concurrent.ConcurrentHashMap

/**
 * Класс, представляющий полное расписание учебного учреждения.
 *
 * <p>Содержит информацию о корпусах, учебных группах, занятиях и расписании звонков.</p>
 *
 * <p>Используется для хранения, обработки и обновления данных о занятиях.</p>
 *
 * @property module - модуль расписания, к которому будет привязано расписание
 */
class Schedule(
    val module: ScheduleModule,
) {
    var dataHandler: DataHandler? = null

    /**
     * Корпусы учебного учреждения.
     */
    val buildings = mutableListOf<Building>()

    /**
     * Список учебных групп.
     *
     * <p>Каждая строка в списке представляет уникальный
     * идентификатор или имя группы (например, "24-СП-ИС01").</p>
     */
    val groups = mutableListOf<String>()

    /**
     * Расписание занятий по дням и группам.
     *
     * <p>Структура представлена в виде вложенного отображения:
     * - Внешний ключ - дата (в формате строки, например "14.11.2024");
     * - Внутренний ключ - идентификатор группы;
     * - Значение - объект {@link Day}, содержащий список занятий за день.</p>
     *
     * <p>Позволяет быстро получить расписание для конкретной группы на конкретную дату.</p>
     */
    val lessons: MutableMap<String, MutableMap<String, Day>> = ConcurrentHashMap()

    /**
     * Расписание звонков (временные интервалы занятий).
     *
     * <p>Ключ - порядковый номер занятия (например, 1, 2, 3...);
     * Значение - пара строк, представляющая время начала и окончания занятия.</p>
     *
     * <p>Например: {@code 1 -> ("8:00", "9:30")}, {@code 2 -> ("9:40", "11:10")}</p>
     */
    val bellSchedule: MutableMap<Int, Pair<String, String>> = ConcurrentHashMap()
}